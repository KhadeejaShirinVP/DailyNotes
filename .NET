***web application using .Net core***
-A Web application (Web app) 
-It is an application program that is stored on a remote server and delivered over the Internet through a browser interface. 
-Web services are Web apps by definition and many, although not all, websites contain Web apps

*Benefits
-Allowing multiple users access to the same version of an application.
-Web apps donâ€™t need to be installed.
-Web apps can be accessed through various platforms such as a desktop, laptop, or mobile.
-Can be accessed through multiple browsers.
-ASP.Net core is a robust and feature-rich framework that helps you develop super-fast APIs for web apps.


***CLASS LIBRARIES

-Class libraries are the shared libraries concept for .NET. They enable you to componentize useful functionality into modules 
 that can be used by multiple applications. 
-A shared library or shared object is a file that is intended to be shared by executable files and further shared object files. 
 Modules used by a program are loaded from individual shared objects into memory at load time or runtime, 
 rather than being copied by a linker when it creates a single monolithic executable file for the program.
-They can also be used as a means of loading functionality that is not needed or not known at application startup.

*TYPES OF CLASS LIBRARIES
Three types of class libraries
1.Platform-specific class libraries have access to all the APIs in a given platform (for example, .NET Framework on Windows, Xamarin iOS), 
  but can only be used by apps and libraries that target that platform.
-Platform-specific libraries are bound to a single .NET platform
-Platform-specific libraries have been the primary class library type for the .NET Framework. 
-Even as other .NET implementations emerged, platform-specific libraries remained the dominant library type.

2. Portable class libraries have access to a subset of APIs, and can be used by apps and        libraries that target multiple platforms.
-Portable libraries are supported on multiple .NET implementations. 
-They can still take dependencies on a known execution environment, however, the environment is a synthetic one that's generated by the intersection of a 
 set of concrete .NET implementations.
-Exposed APIs and platform assumptions are a subset of what would be available to a platform-specific library.

3. .NET Standard class libraries are a merger of the platform-specific and portable library concept into a single model that provides the best of both.
-.NET Standard libraries are a replacement of the platform-specific and portable libraries concepts. 
-They are platform-specific in the sense that they expose all functionality from the underlying platform (no synthetic platforms or platform intersections). 
-They are portable in the sense that they work on all supporting platforms.
-.NET Standard exposes a set of library contracts.
-.NET Standard does not expose the entire functionality of .NET Framework (nor is that a goal), however, the libraries do expose many more APIs than Portable Class Libraries.
-The following implementations support .NET Standard libraries:
	-.NET Core
	-.NET Framework
	-Mono
	-Universal Windows Platform (UWP)